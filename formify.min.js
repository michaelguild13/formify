(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
'use strict';

var utils = require('./src/utils.js');

var defaults = {
  form: {
    method: 'ajax',
    action: 'http://url.com/'
  },
  input: {
    className: '',
    before: '',
    after: ''
  }
};

var inputFactory = {
  submit: function submit(input) {},
  reset: function reset(input) {},
  button: function button(input) {},
  radio: function radio(input) {},
  checkbox: function checkbox(input) {
    return utils.createCheckbox(input, 'checkbox');
  },
  range: function range(input) {},
  select: function select(input) {
    return utils.createSelect(input);
  },
  number: function number(input) {
    return utils.createInput(input, 'number');
  },
  url: function url(input) {
    return utils.createInput(input, 'url');
  },
  date: function date(input) {
    return utils.createInput(input, 'date');
  },
  email: function email(input) {
    return utils.createInput(input, 'email');
  },
  tel: function tel(input) {
    return utils.createInput(input, 'tel');
  },
  text: function text(input) {
    return utils.createInput(input, 'text');
  },
  textarea: function textarea(input) {
    return utils.createTextArea(input, 'textarea');
  },
  contenteditable: function contenteditable(input) {
    return utils.createTextArea(input);
  }
};

var Formify = {
  form: [],
  init: function init(opts) {
    // Create options by extending defaults with the passed in arugments
    if (opts && typeof opts === 'object') {
      Formify.options = utils.extendDefaults(defaults, opts);
    }

    var inputs = document.getElementsByClassName('formify'),
        i = inputs.length;
    while (i--) {
      // add to form model
      var input = inputFactory[inputs[i].dataset.formify] && inputFactory[inputs[i].dataset.formify](inputs[i]);
      if (input) {
        inputs[i].appendChild(input);
        Formify.form.unshift(input);
      }
    }
  },

  showForm: function showForm() {
    var i = Formify.form.length;
    while (i--) {
      Formify.form[i].style.display = 'block';
    }
  },

  hideForm: function hideForm() {
    var i = Formify.form.length;
    while (i--) {
      Formify.form[i].style.display = 'none';
    }
  },

  submitForm: function submitForm() {
    var form = document.createElement('form'),
        i = Formify.form.length;
    while (i--) {
      var input = document.createElement('input');
      input.type = 'hidden';
      input.value = Formify.form[i].value;
      input.name = Formify.form[i].name;
      form.appendChild(input);
    }
    debugger;
  }
};

global.Formify = Formify;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./src/utils.js":2}],2:[function(require,module,exports){
'use strict';

var utils = {
  extendDefaults: function extendDefaults(defaults, opts) {
    for (var k in opts) {
      if (opts[k] && defaults[k] && typeof opts[k] === 'object') {
        defaults[k] = utils.extendDefaults(defaults[k], opts[k]);
      } else {
        defaults[k] = opts[k] || defaults[k];
      }
    }
    return defaults;
  },

  createInput: function createInput(el, type) {
    var input = document.createElement('input'),
        context = el.innerText;

    el.innerHTML = '<span>' + context + '</span>';
    input.type = type;
    input.value = context;
    input.name = el.title;
    input.addEventListener("change", function () {
      el.firstChild.innerText = input.value;
    }, false);

    return input;
  },

  createTextArea: function createTextArea(el, type) {
    var input = '',
        context = el.innerHTML;

    if (type === 'textarea') {
      input = document.createElement('textarea');
      el.innerHTML = '<span>' + context + '</span>';
      input.value = context;
      input.name = el.title;
      input.style.width = '100%';
      input.addEventListener("change", function () {
        el.firstChild.innerHTML = input.value;
      }, false);
    } else {
      input = document.createElement('input');
      input.type = 'hidden';
      input.name = el.title;
      input.value = el.innerHTML;
      el.contentEditable = true;
      el.addEventListener("blur", function () {
        el.lastChild.value = el.innerHTML;
      }, false);
    }
    return input;
  },

  createSelect: function createSelect(el, type) {
    var input = document.createElement('select'),
        options = document.getElementById(el.title) || { options: {} },
        count = options.options.length,
        context = el.innerText;

    el.innerHTML = '<span>' + context + '</span>';
    input.name = el.title;

    while (count--) {
      context === options.options[0].value ? options.options[0].selected = true : '';
      input.appendChild(options.options[count]);
    }

    input.addEventListener("change", function () {
      el.firstChild.innerText = input.value;
    }, false);

    return input;
  },

  createCheckbox: function createCheckbox(el, type) {
    var input = document.createElement('input'),
        label = document.createElement('label'),
        context = el.innerText;

    el.innerHTML = '<span>' + context + '</span>';
    input.type = type;
    input.value = context;
    input.name = el.title;
    input.setAttribute('checked', true);

    label.appendChild(input);
    label.innerHTML += context;
    label.addEventListener("change", function () {
      label.children[0].checked === true ? el.firstChild.innerText = input.value : el.firstChild.innerText = '';
    }, false);
    return label;
  }

};

module.exports = utils;

},{}]},{},[1]);
