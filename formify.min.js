(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
"use strict";
var utils = require('./src/utils.js');
  var defaults = {
    form: {
        method: 'ajax',
        action: 'http://url.com/'
    },
    input: {
      className: '',
      before: '',
      after: ''
    }
  };

  var inputFactory = {
        submit: function (input) {},
        reset: function (input) {},
        button: function (input) {},
        radio: function (input) {},
        checkbox: function (input) {},
        range: function (input) {},
        select: function (input) {},
        number: function (input) { return (utils.createInput(input, 'number'));},
        url: function (input) { return (utils.createInput(input, 'url'));},
        date: function (input) { return (utils.createInput(input, 'date'));},
        email: function (input) { return (utils.createInput(input, 'email'));},
        tel: function (input) { return (utils.createInput(input, 'tel'));},
        text: function (input) { return (utils.createInput(input, 'text'));},
        textarea: function (input) { return (utils.createTextArea(input, 'textarea'));},
        contenteditable: function (input) { return utils.createTextArea(input);}
      };

var Formify = {
  form: [],
  init: function () {
    // Create options by extending defaults with the passed in arugments
    if ( arguments[0] && typeof arguments[0] === "object" ) {
      this.options = utils.extendDefaults(defaults, arguments[0]);
    }

    let inputs = document.getElementsByClassName('formify'),
        i = inputs.length;
    while ( i-- ) {
      // add to form model
      let c = inputs[i].classList.length;
      while ( c-- ){
        let input = inputFactory[inputs[i].classList[c]] && inputFactory[inputs[i].classList[c]](inputs[i]);
        if ( input ) {
          inputs[i].appendChild(input);
          this.form.unshift(input);
        }
      }
    }
  },

  showForm: function () {
    let i = this.form.length;
    while ( i-- ) {
      this.form[i].style.display = 'block';
    }
  },

  hideForm: function () {
    let i = this.form.length;
    while ( i-- ) {
      this.form[i].style.display = 'none';
    }
  },

  submitForm: function () {
    let form = document.createElement('form'),
      i = this.form.length;
    while ( i-- ) {
      let input = document.createElement('input');
      input.type = 'hidden';
      input.value = this.form[i].value;
      input.name = this.form[i].name;
      form.appendChild(input);
    }
    debugger;
  }
};

global.Formify = Formify;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./src/utils.js":2}],2:[function(require,module,exports){
"use strict";

var utils = {
  extendDefaults: function (defaults, opts) {
    // for ( var k in opts ) {
    //   if ( defaults[k] && opts[k] && typeof opts[k] === 'object') {
    //     options.push(extendDefaults(defaults[k], opts[k]));
    //   } else {
    //   }
    // }
  },

  createInput: function ( el, type ) {
    let input = document.createElement('input'),
      context = el.innerText;

    el.innerHTML = '<span>' + context + '</span>';
    input.type = type;
    input.value = context;
    input.name = el.title;
    input.addEventListener("change", function () {
      el.firstChild.innerText = input.value;
    }, false);

    return input;
  },

  createTextArea: function ( el, type ) {
    let input = '',
      context = el.innerHTML;

    if ( type === 'textarea') {
      input = document.createElement('textarea');
      el.innerHTML = '<span>' + context + '</span>';
      input.value = context;
      input.name = el.title;

      input.addEventListener("change", function() {
        el.firstChild.innerHTML = input.value;
      }, false);
    } else {
      input = document.createElement('input');
      input.type = 'hidden';
      input.name = el.title;
      input.value = el.innerHTML;
      el.contentEditable = true;
      el.addEventListener("blur", function() {
        el.lastChild.value = el.innerHTML;
      }, false);
    }
    return input;
  }
};

module.exports = utils;

},{}]},{},[1]);
